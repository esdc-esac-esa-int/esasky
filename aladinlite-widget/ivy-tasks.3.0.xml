<?xml version="1.0" encoding="UTF-8"?>
<!--
 ivy-tasks.3.0.xml
 Ant targets for Ivy Dependency Manager
 ========================================================================================================
 Changes in 29/Aug/2013:
 	- SMTP server sciops-mailgw.vilspa.esa.int changed to smtp.sciops.esa.int
 ========================================================================================================
 Changes in 27/Mar/2013:
 	- New target: ivy-retrieve-runtime to retrieve only dependencies inside the "runtime" configuration
 	- New target: ivy-retrieve-test to retrieve only dependencies inside the "test" configuration
 ========================================================================================================
 Version 3.0 29 Jul 2011
 Copyright (C) 2011  ESA - ESAC - Madrid, Spain
-->
<project default="ivy-install-ivy-jars" basedir="." 
	xmlns:cl="antlib:net.jtools.classloadertask" xmlns:ivy="antlib:org.apache.ivy.ant">

	<!-- ========================================================================= -->
	<!--        Mail Task Targets  		    									   -->
	<!-- ========================================================================= -->	
	<target name="-extract-hostname">
		<property environment="env"/>
		<property name="env.HOSTNAME" value="${env.COMPUTERNAME}"/>
		<property name="hostname" value="${env.HOSTNAME}"/>
	</target>
	<target name="-send-mail" depends="-extract-hostname,-load-classloader">
		<echo message="Loading mail libraries into classpath..."/>
		<path id="ivy.mail.lib.path">
				<fileset dir="${ivy.jar.dir}" includes="${mail.jar.filename},${activation.jar.filename}" />
		</path>
		<cl:classloader loader="project" classpathref="ivy.mail.lib.path" />
		<mail mailhost="smtp.sciops.esa.int" mailport="25"
		            subject="[Ivy-AUTO] [${software.name}-${software.version}] Library uploaded to repository"
					tolist="${notificationmail.tolist}">
		            <from address="${user.name}@${hostname}"/>		            
		            <message>[This mail is automatically generated by Ivy]
Dear all,
${software.name}-${software.version} has been published at ${http.ivy.repository}
Cheers,
SAT Team
					</message>
		    	    <fileset dir="${dist.dir}">
		    	    	<include name="ivy-*.xml"/>
		    	    </fileset>
        </mail>
	</target>
	<target name="-check-classloader-present">
		<available file="${project.classloader.jar.file}" property="classloader.present"/>
		<echo message="Classloader present in your project? -> [${classloader.present}]"/>
	</target>
	<target name="-load-classloader" depends="-check-classloader-present" unless="classloader.present">
		<echo message="Loading Classloader, needed for loading libraries at run time..."/>
		<typedef uri="antlib:net.jtools.classloadertask" resource="net/jtools/classloadertask/antlib.xml">
			<classpath>
				<fileset dir="${ivy.jar.dir}" includes="${classloader.jar.file.name}" />
			</classpath>
		</typedef>
	</target>	
	<!-- ========================================================================= -->
	<!--        Ivy Installation Targets      									   -->
	<!-- ========================================================================= -->
	<target name="download-properties">
		<tstamp>
			<format property="timestamp" pattern="yyyyMMddhhmmss" />
		</tstamp>
		<echo message="Updating (if needed) ivy properties..." />
		<property name="ivy.properties.file" value="ivy-tasks.3.0.properties" />
		<get src="http://satscm.esac.esa.int/ivy/${ivy.properties.file}" dest="${ivy.properties.file}" usetimestamp="true" />
		<property file="${ivy.properties.file}" />
		<echo message="Updating (if needed) ivy tasks xml file..." />
		<property name="ivy.ant.file" value="ivy-tasks.3.0.xml" />
		<get src="http://satscm.esac.esa.int/ivy/${ivy.ant.file}" dest="${ivy.ant.file}" usetimestamp="true" />		
	</target>
	<target name="download-ivy" depends="download-properties">
		<mkdir dir="${ivy.jar.dir}" />
		<echo message="Installing ivy and ssh support..." />
		<get src="${http.ivy.jar}" dest="${ivy.jar.file}" usetimestamp="true" />
		<get src="${http.jsch.jar}" dest="${jsch.jar.file}" usetimestamp="true" />
		<get src="${http.svnant.jar}" dest="${svnant.jar.file}" usetimestamp="true" />
		<get src="${http.svnclientadapter.jar}" dest="${svnclientadapter.jar.file}" usetimestamp="true" />
		<get src="${http.mail.jar}" dest="${mail.jar.file}" usetimestamp="true" />
		<get src="${http.activation.jar}" dest="${activation.jar.file}" usetimestamp="true" />
		<get src="${http.classloader.jar}" dest="${classloader.jar.file}" usetimestamp="true" />
	</target>
	<target name="ivy-install-ivy-jars" depends="download-ivy" description="--> Install ivy">
		<echo message="Loading ivy jar..." />
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar" />
		</path>
		<echo message="Loading ivy tags..." />
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
		<echo message="Loading svn-ant tags..." />
		<taskdef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="ivy.lib.path" />
	</target>
	<target name="ivy-clean-jars" description="--> Clean the ivy installation">
		<delete dir="${ivy.jar.dir}" />
		<delete dir="lib" />
	</target>
	<!-- ========================================================================= -->
	<!--        Svn Functionality Targets           							   -->
	<!-- ========================================================================= -->
	<target name="-svn-tag" depends="-svn-commit">
		<echo message="Tag latest changes as ${artifact.name}..." />
		<svn javahl="false">
			<info target="." />
		</svn>
		<echo message="Path [${svn.info.path}], url [${svn.info.url}], tstamp[${timestamp}] " />
		<echo message="Removing nested paths..." />
		<path id="svn.destinationUrl" location="${svn.info.url}" />
		<pathconvert property="svn.originUrl" refid="svn.destinationUrl">
			<mapper>
				<chainedmapper>
					<filtermapper>
						<replacestring from="${basedir}/" to=""/>
						<replacestring from="http:/" to="http://"/>
						<replacestring from="https:/" to="https://"/>
					</filtermapper>
					<regexpmapper from="^(.*)/trunk/(.*)" to="\1/tags/${software.name}-${software.version}_${timestamp}"/>					
				</chainedmapper>
			</mapper>
		</pathconvert>
		<echo message="Destination url [${svn.originUrl}]" />		
		<input addproperty="tagSelectedDestinationUrl" defaultvalue="${svn.originUrl}" 
				message="Please enter destination url for tag (or select default):"  />			
		<svn javahl="false">
			<copy 	srcUrl="${svn.info.url}" 
				destUrl="${tagSelectedDestinationUrl}"
				message="Tagging software module: [${software.name}-${software.version}]"/>
		</svn>		
	</target>
	<target name="-load-artifact-name">
		<fileset dir="${dist.dir}" id="artifact.folder.contents">
			<include name="*" />
		</fileset>
		<property name="artifact.name" refid="artifact.folder.contents" />
		<echo message="${artifact.name}" />
	</target>
	<target name="-svn-commit" depends="ivy-install-ivy-jars, -load-artifact-name">
		<echo message="Commit current changes to svn repository..." />
		<svn javahl="false">
			<commit message="Automatic svn commit after uploading [${artifact.name}] to Ivy" dir="."/>
		</svn>
	</target>
	<!-- ========================================================================= -->
	<!--        Ivy Functionality Targets           							   -->
	<!-- ========================================================================= -->
	<target name="ivy-settings" depends="ivy-install-ivy-jars">
		<echo message="Loading ivy settings from remote repository..." />
		<ivy:settings url="${http.ivy}/ivysettings.xml" />
	</target>
	<target name="ivy-resolve" depends="ivy-settings">
		<echo message="Resolving ivy dependencies and moving files to ivy cache..." />
		<ivy:resolve />
	</target>
	<target name="ivy-retrieve" description="--> Retrieve dependencies with Ivy" depends="ivy-resolve">
		<echo message="Moving dependencies to project library folder..." />
		<ivy:retrieve />
	</target>
	<target name="ivy-retrieve-runtime" description="--> Retrieve runtime configuration dependencies with Ivy" depends="ivy-resolve">
		<echo message="Moving dependencies to project library folder..." />
		<ivy:retrieve conf="runtime" sync="true"/>
	</target>
	<target name="ivy-retrieve-test" description="--> Retrieve test configuration dependencies with Ivy" depends="ivy-resolve">
		<echo message="Moving dependencies to project library folder..." />
		<ivy:retrieve conf="test" sync="true"/>
	</target>
	<target name="ivy-clean-cache" description="--> Clean the ivy cache" depends="ivy-settings">
		<echo message="Cleaning ivy cache..." />
		<ivy:cleancache />
	</target>
	<target name="ivy-report" depends="ivy-retrieve" description="--> Generates a report of dependencies">
		<echo message="Generating ivy dependencies report..." />
		<ivy:report todir="${build.dir}/${ivyReport.dir}" />
	</target>
	<target name="ivy-deliver" depends="ivy-resolve">
		<echo message="Creating ivy xml file prior to publishing..." />
		<ivy:deliver deliverpattern="${dist.dir}/${artifact.pattern}" />
	</target>
	<target name="-ivy-publish-artifacts" depends="ivy-deliver">
		<echo message="Uploading distribution files to repository..." />
		<ivy:publish resolver="${publish.resolver}" artifactspattern="${dist.dir}/${artifact.pattern}" overwrite="${publish.overwrite}" />
	</target>
	<target name="ivy-publish-artifacts" description="Upload distribution files to repository" 
			depends="-ivy-publish-artifacts">
	    <!--depends="-ivy-publish-artifacts,-send-mail">-->
	</target>
	<target name="ivy-publish" description="--> Upload distribution files to repository plus commit and tag contents" 
			depends="ivy-publish-artifacts, -svn-tag">
	</target>
</project>
